{"version":3,"sources":["store/Store.js","components/Tasks/index.jsx","components/filter/index.jsx","components/ToDoList/index.jsx","components/TasksSelected/index.jsx","components/FilterSelected/index.jsx","components/ToDoListSelected/index.jsx","App.js","index.js","components/ToDoListSelected/style.module.scss"],"names":["selectedTodos","todos","addTodo","todo","tested","map","item","_id","deleteTodo","testTodos","filter","changeTodo","id","isDone","makeAutoObservable","this","Tasks","observer","changeCheck","deleteTask","tasks","setFilterMeaning","filerState","setTasks","filerTasks","useMemo","className","lenght","Checkbox","type","checked","onChange","text","isCheck","Paper","onDoubleClick","title","selected","alt","onClick","newTasks","setSelected","Filter","setFilterState","filterValue","Select","value","e","target","MenuItem","to","Button","ToDoList","url","useState","setTitle","get","setGet","useEffect","a","axios","headers","apikey","then","res","data","catch","alert","createNewTask","post","isSelected","delete","put","Typography","variant","Input","onKeyDown","key","valueFiltering","filteringTasks","TasksSelected","deleteSelectedTask","FilterSelected","ToDoListSelected","style","h3","App","path","component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.620b5a50.chunk.js","sourcesContent":["import {\n  makeAutoObservable,\n} from 'mobx'\n\nclass SelectedTodos {\n  todos = []\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  addTodo = (todo) => {\n    let tested = true\n\n    this.todos.map((item) => {\n      if (item._id === todo._id) {\n        tested = false\n      }\n    })\n    if (tested) {\n      this.todos = [...this.todos, todo]\n    }\n  }\n\n  deleteTodo = (todo) => {\n    const testTodos = this.todos.filter((item) => {\n      if (item._id !== todo._id) return item\n    })\n    this.todos = [...testTodos]\n  }\n\n  changeTodo = (id) => {\n    const testTodos = this.todos.map(item => {\n      if (item._id === id) {\n        item.isDone = !item.isDone\n        return item\n      } else {\n        return item \n      }\n    })\n    this.todos = [...testTodos]\n  }\n}\n\nconst selectedTodos = new SelectedTodos()\n\nexport { selectedTodos }\n","import React, { useMemo } from 'react'\nimport { Checkbox, Paper } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport StarsIcon from '@material-ui/icons/Stars'\nimport { observer } from 'mobx-react-lite'\nimport { selectedTodos } from '../../store/Store'\n\nexport const Tasks = observer(\n  ({\n    changeCheck,\n    deleteTask,\n    tasks,\n    setFilterMeaning,\n    filerState,\n    setTasks,\n  }) => {\n    const filerTasks = useMemo(\n      () => setFilterMeaning(filerState),\n      [tasks, filerState]\n    )\n\n    const setSelected = (id) => {\n      const newTasks = tasks.map((item) => {\n        if (id === item._id) {\n          item.selected = !item.selected\n          return item\n        } else {\n          return item\n        }\n      })\n      setTasks(newTasks)\n    }\n\n    return (\n      <div className='to-do-list-tasks-div'>\n        {tasks.lenght !== 0 &&\n          filerTasks.map((item) => (\n            <div className='tasks-div' key={`task-${item._id}`}>\n              <Checkbox\n                type='checkbox'\n                checked={item.isDone}\n                onChange={() => changeCheck(item.text, item.isCheck, item._id)}\n              />\n              <Paper\n                className={item.isDone ? 'task-p-checked' : 'task-p'}\n                onDoubleClick={() =>\n                  changeCheck(item.title, item.isDone, item._id)\n                }\n              >\n                {item.title}\n              </Paper>\n              <StarsIcon\n                className={\n                  item.selected ? 'selected-icon-active' : 'selected-icon'\n                }\n                alt='Пикчи нет'\n                onClick={() => {\n                  selectedTodos.addTodo(item)\n                  setSelected(item._id)\n                }}\n              />\n              <DeleteIcon\n                className='delete-icon'\n                onClick={() => deleteTask(item)}\n                alt='Пикчи нет'\n              />\n            </div>\n          ))}\n      </div>\n    )\n  }\n)\n","import React from 'react'\nimport { MenuItem, Select, Button } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nimport './style.scss'\n\nexport const Filter = ({ setFilterState, filterValue, filerState }) => (\n  <div className='filter-div'>\n    <Select value={filerState} onChange={(e) => setFilterState(e.target.value)}>\n      {filterValue.map((item) => (\n        <MenuItem key={`filter-${item}`} value={item}>\n          {item}\n        </MenuItem>\n      ))}\n    </Select>\n    <Link to='/to-do-selected' className='link-selected'>\n      <Button className='selected-task-button'>Selected</Button>\n    </Link>\n  </div>\n)\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Tasks } from '../Tasks'\nimport { Filter } from '../filter'\nimport { Button, Input, Typography } from '@material-ui/core'\nimport './style.scss'\nimport { selectedTodos } from '../../store/Store'\n\nexport const ToDoList = () => {\n  const url = 'https://exceed-todo-list.herokuapp.com/api/v1/todos'\n  const [title, setTitle] = useState('')\n  const [tasks, setTasks] = useState([])\n  const [get, setGet] = useState('')\n  const [filerState, setFilterState] = useState('Все')\n  const filterValue = ['Все', 'Выполненные', 'Невыполненные']\n\n  useEffect(async () => {\n    await axios\n      .get(`${url}`, {\n        headers: { apikey: '952773f1-e82c-465f-acd6-5c282e3a2a99' },\n      })\n      .then((res) => {\n        setTasks(res.data.map(item => {\n          item = {...item, selected: false}\n          return item\n        }))\n      })\n      .catch((e) => {\n        alert(`Ошибка ${e}`)\n      })\n  }, [get])\n\n  const createNewTask = async () => {\n    {\n      await axios\n        .post(\n          `${url}`,\n          {\n            title,\n            isDone: false,\n            isSelected: false,\n          },\n          { headers: { apikey: '952773f1-e82c-465f-acd6-5c282e3a2a99' } }\n        )\n        .then((res) => {\n          setTitle('')\n          setGet(res)\n        })\n        .catch((e) => {\n          alert(`Ошибка ${e}`)\n        })\n    }\n  }\n\n  const deleteTask = async (item) => {\n    await axios\n      .delete(`${url}/${item._id}`, {\n        headers: { apikey: '952773f1-e82c-465f-acd6-5c282e3a2a99' },\n      })\n      .then((res) => {\n        selectedTodos.deleteTodo(item)\n        setGet(res)\n      })\n      .catch((e) => {\n        alert(`Ошибка ${e}`)\n      })\n  }\n\n  const changeCheck = async (title, isDone, _id) => {\n    await axios\n      .put(\n        `${url}/${_id}/done`,\n        {\n          isDone,\n        },\n        { headers: { apikey: '952773f1-e82c-465f-acd6-5c282e3a2a99' } }\n      )\n      .then((res) => {\n        selectedTodos.changeTodo(_id)\n        setGet(res)\n      })\n      .catch((e) => {\n        alert(`Ошибка ${e}`)\n      })\n  }\n\n  const setFilterMeaning = (valueFiltering) => {\n    let filteringTasks = [...tasks]\n\n    if (valueFiltering === 'Выполненные') {\n      return filteringTasks.filter((item) => {\n        if (item.isDone) {\n          return item\n        }\n      })\n    } else if (valueFiltering === 'Невыполненные') {\n      return filteringTasks.filter((item) => {\n        if (!item.isDone) {\n          return item\n        }\n      })\n    }\n    return filteringTasks\n  }\n\n  return (\n    <div className='main-to-do-list-div'>\n      <Typography variant='h1'>To-do list</Typography>\n      <div className='creation-string-div'>\n        <Input\n          value={title}\n          className='to-do-list-input'\n          onChange={(e) => setTitle(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              createNewTask()\n            }\n          }}\n        />\n        <Button onClick={() => createNewTask()} className='add-task-button'>\n          Add\n        </Button>\n      </div>\n      <Filter\n        setFilterState={setFilterState}\n        filterValue={filterValue}\n        filerState={filerState}\n      />\n      <Tasks\n        setFilterMeaning={setFilterMeaning}\n        deleteTask={deleteTask}\n        changeCheck={changeCheck}\n        setTasks={setTasks}\n        tasks={tasks}\n        filerState={filerState}\n      />\n    </div>\n  )\n}","import React, { useMemo } from 'react'\nimport { Checkbox, Paper } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport StarsIcon from '@material-ui/icons/Stars'\nimport { selectedTodos } from '../../store/Store'\nimport { observer } from 'mobx-react-lite'\nimport './style.scss'\nimport { values } from 'mobx'\n\nexport const TasksSelected = observer(\n  ({\n    changeCheck,\n    deleteTask,\n    tasks,\n    setFilterMeaning,\n    filerState,\n    setTasks,\n  }) => {\n    const filerTasks = useMemo(\n      () => setFilterMeaning(filerState),\n      [tasks, filerState]\n    )\n\n    const deleteSelectedTask = (item) => {\n      selectedTodos.deleteTodo(item)\n\n      const newTasks = tasks.filter((value) => {\n        if (value._id !== item._id) {\n          return item\n        }\n      })\n\n      setTasks(newTasks)\n    }\n\n    return (\n      <div className='to-do-list-tasks-div'>\n        {tasks.lenght !== 0 &&\n          filerTasks.map((item) => (\n            <div className='tasks-div' key={`task-${item._id}`}>\n              <Checkbox\n                type='checkbox'\n                checked={item.isDone}\n                onChange={() => changeCheck(item.title, item.isDone, item._id)}\n              />\n              <Paper\n                className={item.isDone ? 'task-p-checked' : 'task-p'}\n                onDoubleClick={() =>\n                  changeCheck(item.title, item.isDone, item._id)\n                }\n              >\n                {item.title}\n              </Paper>\n              <StarsIcon\n                className='selected-icon-active'\n                alt='Пикчи нет'\n                onClick={() => deleteSelectedTask(item)}\n              />\n              <DeleteIcon\n                className='delete-icon'\n                onClick={() => deleteTask(item)}\n                alt='Пикчи нет'\n              />\n            </div>\n          ))}\n      </div>\n    )\n  }\n)\n","import React from 'react'\nimport { MenuItem, Select, Button } from '@material-ui/core'\nimport './style.scss'\nimport { Link } from 'react-router-dom'\n\nexport const FilterSelected = ({ setFilterState, filterValue, filerState }) => (\n  <div className='filter-div'>\n    <Select value={filerState} onChange={(e) => setFilterState(e.target.value)}>\n      {filterValue.map((item) => (\n        <MenuItem key={`filter-${item}`} value={item}>\n          {item}\n        </MenuItem>\n      ))}\n    </Select>\n    <Link to='/to-do-list' className='link-selected'>\n      <Button className='selected-task-button'>All tasks</Button>\n    </Link>\n  </div>\n)\n","import React, { useState, useEffect } from 'react'\nimport { TasksSelected } from '../TasksSelected'\nimport { FilterSelected } from '../FilterSelected'\nimport { Typography } from '@material-ui/core'\nimport style from './style.module.scss'\nimport axios from 'axios'\nimport { selectedTodos } from '../../store/Store'\n\nexport const ToDoListSelected = () => {\n  const url = 'https://exceed-todo-list.herokuapp.com/api/v1/todos'\n  const [tasks, setTasks] = useState([])\n  const [filerState, setFilterState] = useState('Все')\n  const filterValue = ['Все', 'Выполненные', 'Невыполненные']\n\n  useEffect(() => {\n    setTasks(selectedTodos.todos)\n  }, [])\n\n  const deleteTask = async (item) => {\n    await axios\n      .delete(`${url}/${item._id}`, {\n        headers: { apikey: '952773f1-e82c-465f-acd6-5c282e3a2a99' },\n      })\n      .then((res) => {\n        selectedTodos.deleteTodo(item)\n\n        const newTasks = tasks.filter((value) => {\n          if (value._id !== item._id) {\n            return item\n          }\n        })\n\n        setTasks(newTasks)\n      })\n      .catch((e) => {\n        alert(`Ошибка ${e}`)\n      })\n  }\n\n  const changeCheck = async (title, isDone, _id) => {\n    await axios\n      .put(\n        `${url}/${_id}/done`,\n        {\n          isDone,\n        },\n        { headers: { apikey: '952773f1-e82c-465f-acd6-5c282e3a2a99' } }\n      )\n      .then((res) => {\n        const newTasks = tasks.map((value) => {\n          if (value._id === _id) {\n            value.isDone = !value.isDone\n            return value\n          } else {\n            return value\n          }\n        })\n        setTasks(newTasks)\n      })\n      .catch((e) => {\n        alert(`Ошибка ${e}`)\n      })\n  }\n\n  const setFilterMeaning = (valueFiltering) => {\n    let filteringTasks = [...tasks]\n\n    if (valueFiltering === 'Выполненные') {\n      return filteringTasks.filter((item) => {\n        if (item.isDone) {\n          return item\n        }\n      })\n    } else if (valueFiltering === 'Невыполненные') {\n      return filteringTasks.filter((item) => {\n        if (!item.isDone) {\n          return item\n        }\n      })\n    }\n    return filteringTasks\n  }\n\n  return (\n    <div className='main-to-do-list-div'>\n      <Typography variant='h1'>To-do list</Typography>\n      <Typography className={style.h3} variant='h3'>\n        Selected\n      </Typography>\n      <div className='creation-string-div'></div>\n      <FilterSelected\n        setFilterState={setFilterState}\n        filterValue={filterValue}\n        filerState={filerState}\n      />\n      <TasksSelected\n        setFilterMeaning={setFilterMeaning}\n        tasks={tasks}\n        filerState={filerState}\n        deleteTask={deleteTask}\n        changeCheck={changeCheck}\n        setTasks={setTasks}\n      />\n    </div>\n  )\n}\n","\nimport React from 'react';\nimport './App.css'\nimport { ToDoList } from './components/ToDoList'\nimport { ToDoListSelected } from './components/ToDoListSelected';          \n\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route path='/to-do-list' component={ToDoList}/>\n        <Route path='/to-do-selected' component={ToDoListSelected}/>\n        <Redirect to='/to-do-list' />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css';\nimport { BrowserRouter as  Router }from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h3\":\"style_h3__2yAQs\"};"],"sourceRoot":""}